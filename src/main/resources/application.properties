# database init, supports mysql too
database=postgres
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost/petclinic}
spring.datasource.username=${POSTGRES_USER:petclinic}
spring.datasource.password=${POSTGRES_PASS:petclinic}

# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always


# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100
# Internationalization
spring.messages.basename=messages/messages
#Security configuration
spring.security.oauth2.client.registration.keycloak.client-id=LegacyUI
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-secret=oSNYTivt72Xtxbnu3lLfY6sYaJBb2gyh
spring.security.oauth2.client.registration.keycloak.client-name=KEYCLOAK
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9081/realms/petclinic-backoffice
# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
#Flyway configuration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h

petclinic.api.id.encoder.owner.alphabet=hwIReFG4U7TKcrsOBjokDNJ6lqbV8zySMLaEgQixH3m15vZ9WXnuYPt2pAfC0d
petclinic.api.id.encoder.owner.min-length=10
spring-petclinic.adminui.oauth2.resourceserver.jwt.jks-set-uri=http://localhost:9081/realms/petclinic-backoffice/protocol/openid-connect/certs
spring-petclinic.api.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9081/realms/petclinic/protocol/openid-connect/certs
